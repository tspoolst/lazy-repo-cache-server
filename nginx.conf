#[of]:server - fetch_proxy
server {
  listen 3128;
  root /usr/share/nginx/html/repo;
  
  location / {
    autoindex on;
    root               /usr/share/nginx/html/repo/$host;
    recursive_error_pages on;
    error_page         404 = @fetch_proxy_http;
#[c]    error_page 404 = /repocache.txt;
#[c]    error_page 301 302 307 = /repocache.txt;
  }
  
  location @fetch_proxy_http {
    internal;
    resolver           8.8.8.8;
    proxy_pass         http://$host$uri;
    root               /usr/share/nginx/html/repo/$host;
#[c]    root               /usr/share/nginx/html;
    proxy_store        on;
    proxy_store_access user:rw group:rw all:r;
    proxy_ignore_client_abort on;
    recursive_error_pages on;
    proxy_intercept_errors on;
    error_page 301 302 307 = @handle_redirects;
    error_page         404 = @fetch_proxy_https;

#[c]    proxy_ssl_server_name on;
    # proxy_ssl_verify off;
    # proxy_set_header Host <remote-hostname-here>;
    # proxy_set_header X_FORWARDED_PROTO https;
#[c]    proxy_ssl_certificate /etc/nginx/client.pem;
#[c]    proxy_ssl_certificate_key /etc/nginx/client.key;
  }
  location @fetch_proxy_https {
    internal;
    resolver           8.8.8.8;
    root               /usr/share/nginx/html/repo/$host;

    proxy_pass         https://$host$uri;
    proxy_ssl_server_name on;

    proxy_store        on;
    proxy_store_access user:rw group:rw all:r;
    proxy_ignore_client_abort on;

  }

  location @handle_redirects {
    internal;
    resolver           8.8.8.8;
    root               /usr/share/nginx/html/repo/$host;
    #store the current state of the world so we can reuse it in a minute
    # We need to capture these values now, because as soon as we invoke 
    # the proxy_* directives, these will disappear
#[c]    set $original_uri $uri;
#[c]    set $new_uri 'download.docker.com/linux/ubuntu/gpg';
    set $new_uri '$upstream_http_location';
#[c]    set $saved_redirect_location '$upstream_http_location';
#[c]    add_header X-debug-message "A static file was served" always;
#[c]    add_header X-uri "$saved_redirect_location";
#[c]    if ( $https = 'on' ) {
#[c]      proxy_pass https://$saved_redirect_location;
      proxy_pass $new_uri;
      proxy_ssl_server_name on;
#[c]    }
#[c]    if ( $https != 'on' ) {
#[c]      proxy_pass http://$saved_redirect_location;
#[c]    }
#[c]    proxy_pass http://127.0.0.1:3128/$saved_redirect_location;

    proxy_store        on;
    proxy_store_access user:rw group:rw all:r;
    proxy_ignore_client_abort on;

    proxy_intercept_errors on;
    error_page 301 302 307 = @handle_redirects;
#[c]    error_page 301 = /repocache.txt;
  }

}
#[cf]
#[of]:server - local cache
server {
  listen       80;
  #server_name  local.lazy.com;
  root /usr/share/nginx/html/repo;
  
  location /repocache.txt {
    autoindex on;
  }

  location ~* ^/([^/]+)/(.*) {
    autoindex on;
    proxy_pass http://127.0.0.1:3128/$2;
    proxy_set_header Host $1;
  }
}
#[cf]
